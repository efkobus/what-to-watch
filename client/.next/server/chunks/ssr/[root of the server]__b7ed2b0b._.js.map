{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/kobus/what-to-watch/client/src/components/motion-div.tsx"],"sourcesContent":["'use client';\n\nimport { motion } from 'framer-motion';\n\nexport const MotionDiv = motion.div;\n"],"names":[],"mappings":";;;AAEA;AAFA;;AAIO,MAAM,YAAY,0LAAA,CAAA,SAAM,CAAC,GAAG","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file:///home/kobus/what-to-watch/client/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///home/kobus/what-to-watch/client/src/components/ui/input.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-slate-700 bg-slate-800 px-3 py-2 text-sm text-white ring-offset-slate-900 file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-slate-400 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-rose-500 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nInput.displayName = \"Input\";\n\nexport { Input };\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAJA;;;;AASA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///home/kobus/what-to-watch/client/src/app/search/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'next/navigation';\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport { MotionDiv } from '@/components/motion-div';\nimport { Input } from '@/components/ui/input';\nimport { Search } from 'lucide-react';\n\n// Define types for our movie results\ninterface Movie {\n  id: number;\n  title: string;\n  poster_path: string;\n  release_date: string;\n  vote_average: number;\n  overview: string;\n  media_type?: string;\n}\n\nexport default function SearchPage() {\n  const searchParams = useSearchParams();\n  const query = searchParams.get('q') || '';\n  \n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [mounted, setMounted] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(query);\n\n  // Only run on client-side\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  useEffect(() => {\n    if (!mounted) return;\n    \n    const fetchMovies = async () => {\n      // Don't search if query is empty\n      if (!query) return;\n      \n      setLoading(true);\n      setError('');\n      \n      try {\n        // Using your backend API endpoint for search\n        const response = await fetch(`/api/movies/search?query=${encodeURIComponent(query)}`);\n        \n        if (!response.ok) {\n          throw new Error(`Error: ${response.status}`);\n        }\n        \n        const data = await response.json();\n        setMovies(data ?? []); // Update this line to handle the direct results array\n      } catch (err) {\n        console.error('Failed to fetch movies:', err);\n        setError('Failed to fetch movies. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchMovies();\n  }, [query, mounted]);\n\n  // Don't render anything on the server side\n  if (!mounted) {\n    return <div className=\"min-h-screen bg-gray-900\"></div>;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900 relative overflow-hidden\">\n      <MotionDiv\n        animate={{\n          background: [\n            'linear-gradient(45deg, #1a1a1a, #2d1a1a)',\n            'linear-gradient(135deg, #2d1a1a, #1a2d2a)',\n            'linear-gradient(225deg, #1a2d2a, #2d1a1a)'\n          ]\n        }}\n        transition={{ duration: 15, repeat: Infinity }}\n        className=\"absolute inset-0 opacity-20\"\n      />\n      <MotionDiv\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"max-w-6xl mx-auto px-4 py-16\"\n      >\n        <h1 className=\"text-4xl md:text-6xl font-bold text-center mb-12 bg-gradient-to-r from-rose-400 via-red-400 to-amber-600 bg-clip-text text-transparent\">\n          Movie Explorer\n        </h1>\n        \n        <div className=\"relative group max-w-2xl mx-auto mb-16\">\n          <Input\n            type=\"text\"\n            placeholder=\"Busque por título, gênero ou ator...\"\n            className=\"h-16 text-lg rounded-2xl shadow-xl pl-16 pr-6 border-2 border-slate-700 bg-slate-800/50 backdrop-blur-sm text-white hover:border-rose-500/50 transition-colors\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n          <Search className=\"absolute left-6 top-1/2 -translate-y-1/2 w-6 h-6 text-rose-500/80 group-hover:text-rose-400 transition-colors\" />\n        </div>\n\n        <h1 className=\"text-3xl font-bold mb-8\">\n          {query ? `Search Results for \"${query}\"` : 'Search Movies'}\n        </h1>\n        \n        {loading && (\n          <div className=\"flex justify-center my-12\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"></div>\n          </div>\n        )}\n        \n        {error && (\n          <div className=\"bg-red-500/20 border border-red-500 text-white p-4 rounded-lg mb-8\">\n            {error}\n          </div>\n        )}\n        \n        {!loading && !error && movies.length === 0 && query && (\n          <div className=\"text-center py-12\">\n            <p className=\"text-xl text-gray-300\">No movies found for \"{query}\"</p>\n            <p className=\"mt-4 text-gray-400\">Try another search term or check your spelling</p>\n          </div>\n        )}\n        \n        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\n          {movies.map((movie) => (\n            <div key={movie.id} className=\"bg-gray-800 rounded-lg overflow-hidden shadow-lg transition-transform hover:scale-105\">\n              <div className=\"relative h-[300px]\">\n                {movie.poster_path ? (\n                  <Image\n                    src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                    alt={movie.title}\n                    fill\n                    className=\"object-cover\"\n                  />\n                ) : (\n                  <div className=\"w-full h-full flex items-center justify-center bg-gray-700\">\n                    <p className=\"text-gray-400\">No image available</p>\n                  </div>\n                )}\n                <div className=\"absolute top-2 right-2 bg-blue-600 text-white text-sm font-semibold px-2 py-1 rounded-md\">\n                  {movie.vote_average?.toFixed(1)}\n                </div>\n              </div>\n              \n              <div className=\"p-4\">\n                <h3 className=\"text-lg font-semibold mb-1 truncate\">{movie.title}</h3>\n                <p className=\"text-sm text-gray-400 mb-2\">\n                  {movie.release_date ? new Date(movie.release_date).getFullYear().toString() : 'Unknown'} \n                  {movie.media_type && ` • ${movie.media_type.charAt(0).toUpperCase() + movie.media_type.slice(1)}`}\n                </p>\n                <p className=\"text-sm text-gray-300 line-clamp-2\">{movie.overview || 'No description available'}</p>\n                <Link \n                  href={`/movie/${movie.id}`} \n                  className=\"block w-full text-center mt-4 py-2 bg-blue-600 rounded hover:bg-blue-700 transition\"\n                >\n                  Details\n                </Link>\n              </div>\n            </div>\n          ))}\n        </div>\n      </MotionDiv>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 392, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}